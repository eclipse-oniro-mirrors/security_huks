#
# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import("//base/security/huks/build/config.gni")
import("//base/security/huks/huks.gni")
import("//build/lite/config/component/lite_component.gni")
import("//build/lite/config/test.gni")

unittest("huks_3.0_test") {
  output_extension = "bin"

  if (!hks_enable_test) {
    output_dir = "$root_out_dir/test/unittest/security/"
  }

  defines = [ "_HUKS_LOG_ENABLE_" ]

  sources = [
    "//base/security/huks/test/unittest/huks_common_test/src/hks_modify_key_test_func.cpp",
    "//base/security/huks/test/unittest/huks_common_test/src/hks_test_adapt_for_de.c",
    "hks_aes_test.cpp",
    "hks_agreement_test.cpp",
    "hks_bn_exp_mod_test.cpp",
    "hks_cipher_test.cpp",
    "hks_curve25519_test.cpp",
    "hks_delete_test.cpp",
    "hks_derive_test.cpp",
    "hks_exist_test.cpp",
    "hks_generate_key_test.cpp",
    "hks_generate_random_test.cpp",
    "hks_hash_test.cpp",
    "hks_mac_test.cpp",
    "hks_others_test.cpp",
  ]
  if (hks_enable_test) {
    if (huks_enable_upgrade_small_to_service) {
      sources += [ "//base/security/huks/test/unittest/huks_lite_test/liteos_a_adapter/upgrade_test/version_one/hks_compatibility_test.cpp" ]
    }
    if (huks_enable_upgrade_rkc_v1tov2) {
      sources += [ "//base/security/huks/test/unittest/huks_lite_test/liteos_a_adapter/upgrade_test/version_two/hks_upgrade_rkc_test.cpp" ]
    }
  }

  sources += [
    "//base/security/huks/frameworks/huks_standard/main/os_dependency/posix/hks_mem.c",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/asymmetric_alg_test/hks_ed25519_sign_verify_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/asymmetric_alg_test/hks_rsa_cipher_part2_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/asymmetric_alg_test/hks_rsa_cipher_part3_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/asymmetric_alg_test/hks_rsa_cipher_part4_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/asymmetric_alg_test/hks_rsa_cipher_part5_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/asymmetric_alg_test/hks_rsa_cipher_test_common.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/asymmetric_alg_test/hks_rsa_sign_verify_part3_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/asymmetric_alg_test/hks_rsa_sign_verify_part4_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/asymmetric_alg_test/hks_rsa_sign_verify_part5_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/asymmetric_alg_test/hks_rsa_sign_verify_part6_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/asymmetric_alg_test/hks_rsa_sign_verify_part7_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/asymmetric_alg_test/hks_rsa_sign_verify_part8_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/asymmetric_alg_test/hks_rsa_sign_verify_test_common.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/hks_agree_test_common.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/hks_hkdf_derive_part1_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/hks_hkdf_derive_part2_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/hks_hkdf_derive_test_common.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/hks_hmac_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/hks_pbkdf2_derive_part1_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/hks_pbkdf2_derive_part2_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/hks_pbkdf2_derive_test_common.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/hks_three_stage_test_common.c",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/hks_x25519_agree_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/symmetric_alg_test/hks_aes_cipher_part1_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/symmetric_alg_test/hks_aes_cipher_part2_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/symmetric_alg_test/hks_aes_cipher_part3_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/symmetric_alg_test/hks_aes_cipher_part4_test.cpp",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/src/symmetric_alg_test/hks_aes_cipher_test_common.cpp",
  ]

  include_dirs = [
    "//base/security/huks/interfaces/inner_api/huks_lite",
    "//base/security/huks/huawei_property/include",
    "../common/include",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/include",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/include/asymmetric_alg_test",
    "//base/security/huks/test/unittest/huks_standard_test/three_stage_test/include/symmetric_alg_test",
    "//base/security/huks/frameworks/huks_standard/main/common/include",
    "//base/security/huks/interfaces/inner_api/huks_standard/main/include",
    "//base/security/huks/test/unittest/huks_common_test/include",
  ]

  include_dirs += [ "./include" ]

  if (huks_enable_upgrade_rkc_v1tov2) {
    include_dirs += [
      "../../../../frameworks/huks_standard/main/os_dependency/sysinfo/include",
      "../../../../frameworks/huks_standard/main/crypto_engine/mbedtls/include",
      "../../../../frameworks/huks_standard/main/crypto_engine/mbedtls/src",
    ]
  }

  deps = [
    "../../../../frameworks/huks_standard/main/crypto_engine/mbedtls:libhuks_mbedtls_small_static",
    "//base/security/huks/frameworks/huks_standard/main/crypto_engine:libhuks_crypto_engine_small_static",
    "//base/security/huks/interfaces/inner_api/huks_lite:huks_3.0_sdk",
    "//base/security/huks/test/unittest/huks_lite_test/common:huks_3.0_test_common",
  ]

  deps += [ "//third_party/mbedtls:mbedtls_shared" ]

  deps += [ "//base/security/huks/test/unittest/modify_old_version_key_test_util:huks_modify_old_version_key_util" ]

  external_deps = [ "hilog_lite:hilog_shared" ]

  cflags = [
    "-Wall",
    "-Werror",
  ]

  if (huks_config_file != "") {
    print(huks_config_file)
    cflags += [ "-DHKS_CONFIG_FILE=\"${huks_config_file}\"" ]
  }

  if (disable_authenticate == true) {
    defines += [ "_CUT_AUTHENTICATE_" ]
  }
}

group("unittest") {
  deps = [ ":huks_3.0_test" ]
}
