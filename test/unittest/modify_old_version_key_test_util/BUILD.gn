#
# Copyright (c) 2023-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import("//base/security/huks/build/config.gni")
import("//base/security/huks/huks.gni")
import("//build/ohos.gni")

config("public_huks_config") {
  include_dirs = [
    ".",
    "../../../services/huks_standard/huks_service/main/core/include",
  ]
}

ohos_static_library("huks_modify_old_version_key_util") {
  sources = []

  sources += [ "./hks_test_modify_old_key.c" ]

  subsystem_name = "security"
  part_name = "huks"

  include_dirs = [
    "../../../interfaces/inner_api/huks_standard/main/include",
    "../../../frameworks/huks_standard/main/common/include",
    "../../../services/huks_standard/huks_service/main/core/include",
  ]

  include_dirs += [ "." ]

  public_configs = [ ":public_huks_config" ]

  deps = []

  cflags = [
    "-Wall",
    "-Werror",
  ]

  sources += [
    "../../../services/huks_standard/huks_engine/main/core/src/hks_auth.c",
    "../../../services/huks_standard/huks_engine/main/core/src/hks_core_interfaces.c",
    "../../../services/huks_standard/huks_engine/main/core/src/hks_core_service_key_attest.c",
    "../../../services/huks_standard/huks_engine/main/core/src/hks_core_service_key_chipset_platform_derive.c",
    "../../../services/huks_standard/huks_engine/main/core/src/hks_core_service_key_generate.c",
    "../../../services/huks_standard/huks_engine/main/core/src/hks_core_service_key_operate_one_stage.c",
    "../../../services/huks_standard/huks_engine/main/core/src/hks_core_service_key_operate_three_stage.c",
    "../../../services/huks_standard/huks_engine/main/core/src/hks_core_service_key_other.c",
    "../../../services/huks_standard/huks_engine/main/core/src/hks_core_service_three_stage.c",
    "../../../services/huks_standard/huks_engine/main/core/src/hks_keyblob.c",
    "../../../services/huks_standard/huks_engine/main/core/src/hks_keynode.c",
    "../../../services/huks_standard/huks_engine/main/core/src/hks_secure_access.c",
    "../../../services/huks_standard/huks_engine/main/core/src/hks_sm_import_wrap_key.c",
    "../../../services/huks_standard/huks_engine/main/core/src/hks_upgrade_key.c",
  ]

  if (os_level == "standard") {
    external_deps = [ "hilog:libhilog" ]
    deps += [
      "../../../frameworks/huks_standard/main:huks_standard_frameworks",
      "../../../services/huks_standard/huks_engine/main/core_dependency:libhuks_core_hal_api_static",
      "../../../services/huks_standard/huks_service/main:libhuks_service_standard_static",
      "../../../utils/crypto_adapter:libhuks_utils_client_service_adapter_static",
      "../../../utils/file_operator:libhuks_utils_file_operator_static",
      "../../../utils/list:libhuks_utils_list_static",
      "../../../utils/mutex:libhuks_utils_mutex_static",
    ]

    if (enable_hks_mock) {
      deps += [ "../../../services/huks_standard/huks_service/main/systemapi_mock:libhuks_service_systemapi_mock_static" ]
    } else {
      deps += [ "../../../services/huks_standard/huks_service/main/systemapi_wrap/useridm:libhuks_service_systemapi_wrap_static" ]
    }

    sources += [
      "../../../services/huks_standard/huks_engine/main/core/src/hks_chipset_platform_decrypt.c",
      "../../../services/huks_standard/huks_engine/main/device_cert_manager/src/dcm_asn1.c",
      "../../../services/huks_standard/huks_engine/main/device_cert_manager/src/dcm_attest.c",
      "../../../services/huks_standard/huks_engine/main/device_cert_manager/src/dcm_attest_utils.c",
    ]

    cflags += [ "-D_HARDWARE_ROOT_KEY_" ]
  } else {
    deps += [
      "../../../frameworks/huks_standard/main:huks_small_frameworks",
      "../../../services/huks_standard/huks_service/main:libhuks_service_small_static",
      "../../../utils/crypto_adapter:libhuks_utils_client_service_adapter_static",
      "../../../utils/file_operator:libhuks_utils_file_operator_static",
      "../../../utils/list:libhuks_utils_list_static",
      "../../../utils/mutex:libhuks_utils_mutex_static",
    ]
    external_deps = [ "hilog_lite:hilog_shared" ]

    if (huks_use_hardware_root_key == true) {
      cflags += [ "-D_HARDWARE_ROOT_KEY_" ]
    }
  }

  include_dirs += [
    "../../../services/huks_standard/huks_engine/main/core/include",
    "../../../services/huks_standard/huks_engine/main/device_cert_manager/include",
    "../../../utils/crypto_adapter",
    "../../../utils/file_operator",
    "../../../utils/list",
    "../../../utils/mutex",
  ]

  defines = []

  if (huks_use_mbedtls) {
    defines += [ "HKS_USE_MBEDTLS" ]
  }

  cflags += [ "-DHKS_KEY_VERSION=1" ]

  cflags += [ "-flto" ]

  cflags += [ "-D_BSD_SOURCE" ]
  cflags += [ "-D_HUKS_LOG_ENABLE_" ]
  cflags += [ "-DGET_DEV_UDID_ENABLE" ]

  if (huks_config_file != "") {
    print(huks_config_file)
    cflags += [ "-DHKS_CONFIG_FILE=\"${huks_config_file}\"" ]
  }
}
